[{"/home/osama/projects/roots/frontend/pages/_app.js":"1","/home/osama/projects/roots/frontend/pages/api/hello.js":"2","/home/osama/projects/roots/frontend/pages/index.js":"3","/home/osama/projects/roots/frontend/components/Chapter.js":"4","/home/osama/projects/roots/frontend/components/CopySentences.js":"5","/home/osama/projects/roots/frontend/components/Footer.js":"6","/home/osama/projects/roots/frontend/components/Form.js":"7","/home/osama/projects/roots/frontend/components/Navbar.js":"8","/home/osama/projects/roots/frontend/components/NextButton.js":"9","/home/osama/projects/roots/frontend/components/PrevButton.js":"10","/home/osama/projects/roots/frontend/components/RootWordsDisplay.js":"11","/home/osama/projects/roots/frontend/components/Verse.js":"12"},{"size":142,"mtime":1672081342474,"results":"13","hashOfConfig":"14"},{"size":170,"mtime":1672081342474,"results":"15","hashOfConfig":"14"},{"size":1100,"mtime":1672081342474,"results":"16","hashOfConfig":"14"},{"size":2337,"mtime":1672081342474,"results":"17","hashOfConfig":"14"},{"size":871,"mtime":1672081342474,"results":"18","hashOfConfig":"14"},{"size":581,"mtime":1672081342474,"results":"19","hashOfConfig":"14"},{"size":3832,"mtime":1672081342474,"results":"20","hashOfConfig":"14"},{"size":2378,"mtime":1672081342474,"results":"21","hashOfConfig":"14"},{"size":974,"mtime":1672081342474,"results":"22","hashOfConfig":"14"},{"size":871,"mtime":1672081342474,"results":"23","hashOfConfig":"14"},{"size":3332,"mtime":1672081342474,"results":"24","hashOfConfig":"14"},{"size":1963,"mtime":1672081342474,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5h0xn5",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/osama/projects/roots/frontend/pages/_app.js",[],[],"/home/osama/projects/roots/frontend/pages/api/hello.js",[],[],"/home/osama/projects/roots/frontend/pages/index.js",[],[],"/home/osama/projects/roots/frontend/components/Chapter.js",["65"],[],"import * as React from \"react\";\nimport { getVerseOptions } from \"./Verse\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { apiGET } from \"../utils\";\n\nexport default function Chapter(props) {\n\n    const handleChapterChange = async (event) => {\n        props.setChapter(event.target.value);\n        props.setVerseNumber(\"\");\n        let ver = await getVerseOptions(event.target.value, props.setVerses);\n        let verse_options = Object.keys(ver).map((c) => {\n            return ver[c].verse_list;\n        });\n        props.setVerseOptions(verse_options);\n    };\n\n    React.useEffect(() => {\n        getChapters();\n    }, []);\n\n    const getChapters = async () => {\n        let chapters_res = await apiGET(\"/chapters\")\n            .then((response) => {\n                return response;\n            })\n            .catch((err) => {\n                return err;\n            });\n        if (chapters_res && chapters_res.data) {\n            props.setChapters(chapters_res.data.data);\n        }\n    };\n\n    let chapt = {};\n    for (var i = 1; i < props.chapters.length + 1; i++) {\n        let name = props.chapters[i - 1].sura_name;\n        let chapt_list = [];\n        chapt_list.push(\n            <MenuItem key={i} value={i}>\n                Chapter {i} : {name}\n            </MenuItem>\n        );\n        chapt[`chapter_${i}`] = { chapt_list };\n    }\n    let chapter_options = Object.keys(chapt).map((c) => {\n        return chapt[c].chapt_list;\n    });\n\n    return (\n        <div>\n            <FormControl required sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"chapter-select-required-label\">\n                    Chapter\n                </InputLabel>\n                <Select\n                    labelId=\"chapter-select-required-label\"\n                    id=\"chapter-select-required\"\n                    value={props.currentChapter}\n                    label=\"Chapter\"\n                    onChange={handleChapterChange}\n                >\n                    {chapter_options}\n                </Select>\n                <FormHelperText>Required</FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\n","/home/osama/projects/roots/frontend/components/CopySentences.js",[],[],"/home/osama/projects/roots/frontend/components/Footer.js",[],[],"/home/osama/projects/roots/frontend/components/Form.js",["66"],[],"import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport RootWordsDisplay from \"./RootWordsDisplay\";\nimport Chapter from \"./Chapter\";\nimport Verse from \"./Verse\";\nimport NextButton from \"./NextButton\";\nimport PrevButton from \"./PrevButton\";\nimport { getRoots } from \"../utils\";\n\nexport default function Form() {\n    const [currentChapter, setChapter] = React.useState(\"\");\n    const [verseNumber, setVerseNumber] = React.useState(\"\");\n    const [verseOptions, setVerseOptions] = React.useState(\"\");\n    const [chapters, setChapters] = React.useState([]);\n    const [verses, setVerses] = React.useState([]);\n    const [roots, setRoots] = React.useState([]);\n\n    const handleVerseChange = (event) => {\n        let index = event.target.value;\n\n        setVerseNumber(index - 1);\n        getRoots(setRoots, index);\n    };\n\n    React.useEffect(() => {\n        currentChapter === \"\" ? setVerseNumber(\"\") : handleVerseChange;\n    });\n\n    return (\n        <div className=\"Form\">\n            <Box display=\"flex\" justifyContent=\"center\">\n                <Chapter\n                    currentChapter={currentChapter}\n                    chapters={chapters}\n                    setVerseNumber={setVerseNumber}\n                    setChapter={setChapter}\n                    setChapters={setChapters}\n                    setVerses={setVerses}\n                    setVerseOptions={setVerseOptions}\n                />\n\n                <Verse\n                    currentChapter={currentChapter}\n                    verseNumber={verseNumber}\n                    setVerseNumber={setVerseNumber}\n                    verseOptions={verseOptions}\n                    handleVerseChange={handleVerseChange}\n                />\n            </Box>\n\n            {verses[verseNumber] ? (\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    display=\"inline-flex\"\n                >\n                    <Grid item>\n                        <PrevButton\n                            setVerseNumber={setVerseNumber}\n                            verseNumber={verseNumber}\n                            verses={verses}\n                            setRoots={setRoots}\n                        />\n                    </Grid>\n\n                    <Grid item>\n                        <NextButton\n                            setVerseNumber={setVerseNumber}\n                            numberOfVerses={verses.length}\n                            verseNumber={verseNumber}\n                            verses={verses}\n                            setRoots={setRoots}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <RootWordsDisplay\n                            verse={verses[verseNumber]}\n                            setRoots={setRoots}\n                            roots={roots}\n                        />\n                    </Grid>\n\n                    <Grid item>\n                        <PrevButton\n                            setVerseNumber={setVerseNumber}\n                            verseNumber={verseNumber}\n                            verses={verses}\n                            setRoots={setRoots}\n                        />\n                    </Grid>\n\n                    <Grid item>\n                        <NextButton\n                            setVerseNumber={setVerseNumber}\n                            numberOfVerses={verses.length}\n                            verseNumber={verseNumber}\n                            verses={verses}\n                            setRoots={setRoots}\n                        />\n                    </Grid>\n                </Grid>\n            ) : null}\n        </div>\n    );\n}\n","/home/osama/projects/roots/frontend/components/Navbar.js",[],[],"/home/osama/projects/roots/frontend/components/NextButton.js",[],[],"/home/osama/projects/roots/frontend/components/PrevButton.js",[],[],"/home/osama/projects/roots/frontend/components/RootWordsDisplay.js",["67"],[],"import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport CopySentences from \"./CopySentences\";\nimport { getRoots } from \"../utils\";\nimport styles from \"./rootWord.module.css\";\n\nexport default function RootWordsDisplay(props) {\n    let roots = props.roots;\n    React.useEffect(() => {\n        getRoots(props.setRoots, props.verse);\n    }, []);\n\n    let b = {};\n    for (var r = 0; r < roots.length; r++) {\n        let boxes = [];\n        boxes.push(\n            <div>\n                <Grid key={r} className={styles.roots} container pb={1}>\n                    <Grid item xs={1} className={styles.root_grid_items}>\n                        <Typography\n                            className={styles.stuff}\n                            sx={{ fontSize: 25 }}\n                        >\n                            {roots[r].word}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={1} className={styles.root_grid_items}>\n                        <Typography\n                            className={styles.stuff}\n                            sx={{ fontSize: 25 }}\n                        >\n                            {roots[r].rootword}{\" \"}\n                        </Typography>\n                    </Grid>\n                    <Grid item md={5} className={styles.root_grid_items}>\n                        <Typography sx={{ fontSize: 20 }}>\n                            {roots[r].meanings}{\" \"}\n                        </Typography>\n                    </Grid>\n                    <Grid item md={1}>\n                        {/* Note that we're passing in roots[r].sentence in a list */}\n                        <CopySentences\n                            roots={[roots[r]]}\n                        ></CopySentences>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n        b[`box_${r}`] = { boxes };\n    }\n\n    let box_display = Object.keys(b).map((c) => {\n        return b[c].boxes;\n    });\n    return (\n        <div>\n            <Grid container direction=\"column\">\n                <Grid item className={styles.roots}>\n                    <Typography variant=\"h5\" component=\"div\" pb={1}>\n                        {props.verse.text}\n                    </Typography>\n                    <Grid container pb={1} className={styles.roots}>\n                        <Grid item xs={1} className={styles.root_grid_items}>\n                            <Typography variant=\"outline\">Word</Typography>\n                        </Grid>\n                        <Grid item xs={1} className={styles.root_grid_items}>\n                            <Typography variant=\"outline\">Root</Typography>\n                        </Grid>\n                        <Grid item xs={5} className={styles.root_grid_items}>\n                            <Typography variant=\"outline\">Meanings</Typography>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <CopySentences\n                                copyAll={true}\n                                roots={props.roots}\n                            ></CopySentences>\n                        </Grid>\n                    </Grid>\n                    {box_display}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/home/osama/projects/roots/frontend/components/Verse.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":24,"column":8,"nodeType":"70","endLine":24,"endColumn":10,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":26,"column":5,"nodeType":"73","endLine":26,"endColumn":20,"suggestions":"74"},{"ruleId":"68","severity":1,"message":"75","line":12,"column":8,"nodeType":"70","endLine":12,"endColumn":10,"suggestions":"76"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getChapters'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect contains a call to 'setVerseNumber'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [currentChapter] as a second argument to the useEffect Hook.","MemberExpression",["78"],"React Hook React.useEffect has missing dependencies: 'props.setRoots' and 'props.verse'. Either include them or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [getChapters]",{"range":"86","text":"87"},"Add dependencies array: [currentChapter]",{"range":"88","text":"89"},"Update the dependencies array to be: [props.setRoots, props.verse]",{"range":"90","text":"91"},[835,837],"[getChapters]",[983,983],", [currentChapter]",[410,412],"[props.setRoots, props.verse]"]